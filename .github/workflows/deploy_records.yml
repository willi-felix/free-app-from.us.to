name: Verify and Deploy DNS Changes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Verify JSON files existence
      run: |
        if [ ! -f "./verify_jsons.js" ]; then
          echo "verify_jsons.js not found!"
          exit 1
        fi

    - name: Run verification script
      run: node verify_jsons.js

    - name: Check IP Address
      id: check-ip
      run: |
        ALLOWED_IPS=("123.456.78.90" "234.567.89.01")
        CURRENT_IP=$(curl -s http://checkip.amazonaws.com)
        echo "Current IP: $CURRENT_IP"

        if [[ ! " ${ALLOWED_IPS[@]} " =~ " ${CURRENT_IP} " ]]; then
          echo "IP address $CURRENT_IP is not allowed."
          exit 1
        fi

    - name: Deploy to Cloudflare Pages
      if: steps.check-ip.outcome == 'success'
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
        directory: 'public'

  verify-dns:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.4.1'

      - name: Verify content of the JSONs
        run: |
          if [ ! -f "./verify_jsons.js" ]; then
            echo "verify_jsons.js not found!"
            exit 1
          fi
          node ./verify_jsons.js

      - name: Install DNSControl
        run: |
          curl -sSL https://github.com/StackExchange/dnscontrol/releases/download/v4.12.4/dnscontrol_4.12.4_linux_amd64.tar.gz -o dnscontrol.tar.gz
          tar -xzf dnscontrol.tar.gz
          sudo mv dnscontrol /usr/local/bin/

      - name: Create credentials file
        run: |
          echo '{"cloudflare":{"TYPE":"CLOUDFLAREAPI","apitoken":"${{ secrets.CLOUDFLARE_API_TOKEN }}","accountid":"${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"}}' > ./creds.json
          
      - name: Run verification from DNSControl
        run: dnscontrol check
          
      - name: Push records to DNSControl
        run: dnscontrol push
